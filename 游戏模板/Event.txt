Event

事件

是逻辑控制模块中的底层单位，通常实现某种功能
如：控制 A 物体绕 B 物体旋转等。

同时，事件要支持基础的扩展功能，即一个事件要可以由其他事件组成
这使得我们可以在一个事件的初始化中写
add(下雨)
add(打雷)
刮风.add(树木摇动)
刮风.add(水面添加波纹效果)
add(刮风)
上面这个例子中显然我们希望这些效果是并行的
但有时我们也希望效果是顺序执行的
add(向前走2步)
add(左转)
add(向后退两步)
毫无疑问，如果转弯的时机稍有变动，这就是另一个结果了。

为了让事件在合适的时间运行，需要加入事件状态控制
事件有多个状态，如果不是RUNNING（运行）状态
事件就不更新，通过这种机制来控制事件。

事件的生命周期
NEW-->start()-->RUNNING-->block()-->BLOCKED-->start()-->RUNNING
-->stop()-->DEAD

在调用对应的函数时会自动修改状态，同时调用对应的
when...()函数
如start()调用whenStart()
该函数是留给用户可以修改的，后续可能还会加上一些事件监听
（特殊的，NEW-->RUNING中会调用firstStart()函数
可以在该函数中进行一些初始化工作等。
）
